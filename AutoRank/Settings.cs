using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.Xml;
using System.Xml.Linq;
using System.IO;

namespace AutoRank
{
    public static class Settings
    {
        public static bool multiLayered = false;
        public static List<TreeNode> tempChildNodes = new List<TreeNode>();
        public static List<string> usedConditionals = new List<string>();

        //Save TreeList data to xml
        public static void Save()
        {
            if (File.Exists("autorank.xml"))
            {
                File.Delete("autorank.xml");
            }

            XmlWriterSettings settings = new XmlWriterSettings();
            settings.Indent = true;

            XmlWriter writer = XmlWriter.Create("Autorank.xml", settings);
            writer.WriteStartDocument();
            writer.WriteComment("This file was generated by the LegendCraft Autorank program.");

            writer.WriteStartElement("Autorank");//<Autorank>

            foreach (TreeNode mainNode in AutoRank.TreeList.Nodes)
            {
                writer.WriteStartElement(mainNode.Text.Replace(" ", ""));
                foreach (TreeNode childNode in mainNode.Nodes)
                {
                    string conditional;
                    string value;
                    if (childNode.Text.Contains("AND"))
                    {
                        string[] completely_Murdered_String_Of_Text = childNode.Text.Substring(childNode.Text.IndexOf(":") + 4).Split(new char[] { ' ' });//yup

                        conditional = completely_Murdered_String_Of_Text[0].Replace(" ", "");
                        value = completely_Murdered_String_Of_Text[1].Replace(" ", "");
                        writer.WriteAttributeString(conditional, value);
                    }
                    else
                    {
                        string[] slightly_Murdered_String_Of_Text = childNode.Text.Substring(3).Split(new char[] { ' ' });

                        conditional = slightly_Murdered_String_Of_Text[0].Replace(" ", "");
                        value = slightly_Murdered_String_Of_Text[1].Replace(" ", "");
                        writer.WriteAttributeString(conditional, value);
                    }
                }
                writer.WriteEndElement();
            }

            writer.WriteEndElement();//</Autorank>

            writer.WriteEndDocument();
            writer.Flush();
            writer.Close();
        }

        //Load xml into TreeList
        public static void Load()
        {

        }
    }
}
